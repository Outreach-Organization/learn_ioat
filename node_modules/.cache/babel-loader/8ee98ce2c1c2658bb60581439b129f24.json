{"ast":null,"code":"var __extends = this && this.t || function () {\n  var extendStatics = function (i, r) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (i, r) {\n      i.__proto__ = r;\n    } || function (i, r) {\n      for (var t in r) if (Object.prototype.hasOwnProperty.call(r, t)) i[t] = r[t];\n    };\n\n    return extendStatics(i, r);\n  };\n\n  return function (i, r) {\n    if (typeof r !== \"function\" && r !== null) throw new TypeError(\"Class extends value \" + String(r) + \" is not a constructor or null\");\n    extendStatics(i, r);\n\n    function __() {\n      this.constructor = i;\n    }\n\n    i.prototype = r === null ? Object.create(r) : (__.prototype = r.prototype, new __());\n  };\n}();\n\nvar __read = this && this.q || function (i, r) {\n  var t = typeof Symbol === \"function\" && i[Symbol.iterator];\n  if (!t) return i;\n  var e = t.call(i),\n      n,\n      u = [],\n      s;\n\n  try {\n    while ((r === void 0 || r-- > 0) && !(n = e.next()).done) u.push(n.value);\n  } catch (i) {\n    s = {\n      error: i\n    };\n  } finally {\n    try {\n      if (n && !n.done && (t = e[\"return\"])) t.call(e);\n    } finally {\n      if (s) throw s.error;\n    }\n  }\n\n  return u;\n};\n\nvar __spreadArray = this && this.D || function (i, r, t) {\n  if (t || arguments.length === 2) for (var e = 0, n = r.length, u; e < n; e++) {\n    if (u || !(e in r)) {\n      if (!u) u = Array.prototype.slice.call(r, 0, e);\n      u[e] = r[e];\n    }\n  }\n  return i.concat(u || Array.prototype.slice.call(r));\n};\n\nimport { Base } from \"../ContainerBase\";\n\nvar PriorityQueue = function (i) {\n  __extends(PriorityQueue, i);\n\n  function PriorityQueue(r, t, e) {\n    if (r === void 0) {\n      r = [];\n    }\n\n    if (t === void 0) {\n      t = function (i, r) {\n        if (i > r) return -1;\n        if (i < r) return 1;\n        return 0;\n      };\n    }\n\n    if (e === void 0) {\n      e = true;\n    }\n\n    var n = i.call(this) || this;\n    n.$ = t;\n\n    if (Array.isArray(r)) {\n      n.ii = e ? __spreadArray([], __read(r), false) : r;\n    } else {\n      n.ii = [];\n      var u = n;\n      r.forEach(function (i) {\n        u.ii.push(i);\n      });\n    }\n\n    n.M = n.ii.length;\n    var s = n.M >> 1;\n\n    for (var o = n.M - 1 >> 1; o >= 0; --o) {\n      n.ri(o, s);\n    }\n\n    return n;\n  }\n\n  PriorityQueue.prototype.ti = function (i) {\n    var r = this.ii[i];\n\n    while (i > 0) {\n      var t = i - 1 >> 1;\n      var e = this.ii[t];\n      if (this.$(e, r) <= 0) break;\n      this.ii[i] = e;\n      i = t;\n    }\n\n    this.ii[i] = r;\n  };\n\n  PriorityQueue.prototype.ri = function (i, r) {\n    var t = this.ii[i];\n\n    while (i < r) {\n      var e = i << 1 | 1;\n      var n = e + 1;\n      var u = this.ii[e];\n\n      if (n < this.M && this.$(u, this.ii[n]) > 0) {\n        e = n;\n        u = this.ii[n];\n      }\n\n      if (this.$(u, t) >= 0) break;\n      this.ii[i] = u;\n      i = e;\n    }\n\n    this.ii[i] = t;\n  };\n\n  PriorityQueue.prototype.clear = function () {\n    this.M = 0;\n    this.ii.length = 0;\n  };\n\n  PriorityQueue.prototype.push = function (i) {\n    this.ii.push(i);\n    this.ti(this.M);\n    this.M += 1;\n  };\n\n  PriorityQueue.prototype.pop = function () {\n    if (this.M === 0) return;\n    var i = this.ii[0];\n    var r = this.ii.pop();\n    this.M -= 1;\n\n    if (this.M) {\n      this.ii[0] = r;\n      this.ri(0, this.M >> 1);\n    }\n\n    return i;\n  };\n\n  PriorityQueue.prototype.top = function () {\n    return this.ii[0];\n  };\n\n  PriorityQueue.prototype.find = function (i) {\n    return this.ii.indexOf(i) >= 0;\n  };\n\n  PriorityQueue.prototype.remove = function (i) {\n    var r = this.ii.indexOf(i);\n    if (r < 0) return false;\n\n    if (r === 0) {\n      this.pop();\n    } else if (r === this.M - 1) {\n      this.ii.pop();\n      this.M -= 1;\n    } else {\n      this.ii.splice(r, 1, this.ii.pop());\n      this.M -= 1;\n      this.ti(r);\n      this.ri(r, this.M >> 1);\n    }\n\n    return true;\n  };\n\n  PriorityQueue.prototype.updateItem = function (i) {\n    var r = this.ii.indexOf(i);\n    if (r < 0) return false;\n    this.ti(r);\n    this.ri(r, this.M >> 1);\n    return true;\n  };\n\n  PriorityQueue.prototype.toArray = function () {\n    return __spreadArray([], __read(this.ii), false);\n  };\n\n  return PriorityQueue;\n}(Base);\n\nexport default PriorityQueue;","map":{"version":3,"sources":["container/OtherContainer/PriorityQueue.js","../../src/container/OtherContainer/PriorityQueue.ts"],"names":["__extends","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","__read","o","n","m","Symbol","iterator","i","r","ar","e","next","done","push","value","error","__spreadArray","to","from","pack","arguments","length","l","slice","concat","_this","Base","x","y","_super","_cmp","cmp","isArray","container","_priorityQueue","copy","self_1","forEach","el","_length","halfLength","parent_1","_pushDown","PriorityQueue","pos","item","parent_2","parentItem","left","right","minItem","_pushUp","last","pop","indexOf","index","splice"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { Base } from \"../ContainerBase\";\nvar PriorityQueue = /** @class */ (function (_super) {\n    __extends(PriorityQueue, _super);\n    /**\n     * @description PriorityQueue's constructor.\n     * @param container - Initialize container, must have a forEach function.\n     * @param cmp - Compare function.\n     * @param copy - When the container is an array, you can choose to directly operate on the original object of\n     *               the array or perform a shallow copy. The default is shallow copy.\n     * @example\n     * new PriorityQueue();\n     * new PriorityQueue([1, 2, 3]);\n     * new PriorityQueue([1, 2, 3], (x, y) => x - y);\n     * new PriorityQueue([1, 2, 3], (x, y) => x - y, false);\n     */\n    function PriorityQueue(container, cmp, copy) {\n        if (container === void 0) { container = []; }\n        if (cmp === void 0) { cmp = function (x, y) {\n            if (x > y)\n                return -1;\n            if (x < y)\n                return 1;\n            return 0;\n        }; }\n        if (copy === void 0) { copy = true; }\n        var _this = _super.call(this) || this;\n        _this._cmp = cmp;\n        if (Array.isArray(container)) {\n            _this._priorityQueue = copy ? __spreadArray([], __read(container), false) : container;\n        }\n        else {\n            _this._priorityQueue = [];\n            var self_1 = _this;\n            container.forEach(function (el) {\n                self_1._priorityQueue.push(el);\n            });\n        }\n        _this._length = _this._priorityQueue.length;\n        var halfLength = _this._length >> 1;\n        for (var parent_1 = (_this._length - 1) >> 1; parent_1 >= 0; --parent_1) {\n            _this._pushDown(parent_1, halfLength);\n        }\n        return _this;\n    }\n    /**\n     * @internal\n     */\n    PriorityQueue.prototype._pushUp = function (pos) {\n        var item = this._priorityQueue[pos];\n        while (pos > 0) {\n            var parent_2 = (pos - 1) >> 1;\n            var parentItem = this._priorityQueue[parent_2];\n            if (this._cmp(parentItem, item) <= 0)\n                break;\n            this._priorityQueue[pos] = parentItem;\n            pos = parent_2;\n        }\n        this._priorityQueue[pos] = item;\n    };\n    /**\n     * @internal\n     */\n    PriorityQueue.prototype._pushDown = function (pos, halfLength) {\n        var item = this._priorityQueue[pos];\n        while (pos < halfLength) {\n            var left = pos << 1 | 1;\n            var right = left + 1;\n            var minItem = this._priorityQueue[left];\n            if (right < this._length &&\n                this._cmp(minItem, this._priorityQueue[right]) > 0) {\n                left = right;\n                minItem = this._priorityQueue[right];\n            }\n            if (this._cmp(minItem, item) >= 0)\n                break;\n            this._priorityQueue[pos] = minItem;\n            pos = left;\n        }\n        this._priorityQueue[pos] = item;\n    };\n    PriorityQueue.prototype.clear = function () {\n        this._length = 0;\n        this._priorityQueue.length = 0;\n    };\n    /**\n     * @description Push element into a container in order.\n     * @param item - The element you want to push.\n     * @returns The size of heap after pushing.\n     * @example\n     * queue.push(1);\n     */\n    PriorityQueue.prototype.push = function (item) {\n        this._priorityQueue.push(item);\n        this._pushUp(this._length);\n        this._length += 1;\n    };\n    /**\n     * @description Removes the top element.\n     * @returns The element you popped.\n     * @example\n     * queue.pop();\n     */\n    PriorityQueue.prototype.pop = function () {\n        if (this._length === 0)\n            return;\n        var value = this._priorityQueue[0];\n        var last = this._priorityQueue.pop();\n        this._length -= 1;\n        if (this._length) {\n            this._priorityQueue[0] = last;\n            this._pushDown(0, this._length >> 1);\n        }\n        return value;\n    };\n    /**\n     * @description Accesses the top element.\n     * @example\n     * const top = queue.top();\n     */\n    PriorityQueue.prototype.top = function () {\n        return this._priorityQueue[0];\n    };\n    /**\n     * @description Check if element is in heap.\n     * @param item - The item want to find.\n     * @returns Whether element is in heap.\n     * @example\n     * const que = new PriorityQueue([], (x, y) => x.id - y.id);\n     * const obj = { id: 1 };\n     * que.push(obj);\n     * console.log(que.find(obj));  // true\n     */\n    PriorityQueue.prototype.find = function (item) {\n        return this._priorityQueue.indexOf(item) >= 0;\n    };\n    /**\n     * @description Remove specified item from heap.\n     * @param item - The item want to remove.\n     * @returns Whether remove success.\n     * @example\n     * const que = new PriorityQueue([], (x, y) => x.id - y.id);\n     * const obj = { id: 1 };\n     * que.push(obj);\n     * que.remove(obj);\n     */\n    PriorityQueue.prototype.remove = function (item) {\n        var index = this._priorityQueue.indexOf(item);\n        if (index < 0)\n            return false;\n        if (index === 0) {\n            this.pop();\n        }\n        else if (index === this._length - 1) {\n            this._priorityQueue.pop();\n            this._length -= 1;\n        }\n        else {\n            this._priorityQueue.splice(index, 1, this._priorityQueue.pop());\n            this._length -= 1;\n            this._pushUp(index);\n            this._pushDown(index, this._length >> 1);\n        }\n        return true;\n    };\n    /**\n     * @description Update item and it's pos in the heap.\n     * @param item - The item want to update.\n     * @returns Whether update success.\n     * @example\n     * const que = new PriorityQueue([], (x, y) => x.id - y.id);\n     * const obj = { id: 1 };\n     * que.push(obj);\n     * obj.id = 2;\n     * que.updateItem(obj);\n     */\n    PriorityQueue.prototype.updateItem = function (item) {\n        var index = this._priorityQueue.indexOf(item);\n        if (index < 0)\n            return false;\n        this._pushUp(index);\n        this._pushDown(index, this._length >> 1);\n        return true;\n    };\n    /**\n     * @returns Return a copy array of heap.\n     * @example\n     * const arr = queue.toArray();\n     */\n    PriorityQueue.prototype.toArray = function () {\n        return __spreadArray([], __read(this._priorityQueue), false);\n    };\n    return PriorityQueue;\n}(Base));\nexport default PriorityQueue;\n","import { Base, initContainer } from '@/container/ContainerBase';\n\nclass PriorityQueue<T> extends Base {\n  /**\n   * @internal\n   */\n  private readonly _priorityQueue: T[];\n  /**\n   * @internal\n   */\n  private readonly _cmp: (x: T, y: T) => number;\n  /**\n   * @description PriorityQueue's constructor.\n   * @param container - Initialize container, must have a forEach function.\n   * @param cmp - Compare function.\n   * @param copy - When the container is an array, you can choose to directly operate on the original object of\n   *               the array or perform a shallow copy. The default is shallow copy.\n   * @example\n   * new PriorityQueue();\n   * new PriorityQueue([1, 2, 3]);\n   * new PriorityQueue([1, 2, 3], (x, y) => x - y);\n   * new PriorityQueue([1, 2, 3], (x, y) => x - y, false);\n   */\n  constructor(\n    container: initContainer<T> = [],\n    cmp: (x: T, y: T) => number =\n    function (x: T, y: T) {\n      if (x > y) return -1;\n      if (x < y) return 1;\n      return 0;\n    },\n    copy = true\n  ) {\n    super();\n    this._cmp = cmp;\n    if (Array.isArray(container)) {\n      this._priorityQueue = copy ? [...container] : container;\n    } else {\n      this._priorityQueue = [];\n      const self = this;\n      container.forEach(function (el) {\n        self._priorityQueue.push(el);\n      });\n    }\n    this._length = this._priorityQueue.length;\n    const halfLength = this._length >> 1;\n    for (let parent = (this._length - 1) >> 1; parent >= 0; --parent) {\n      this._pushDown(parent, halfLength);\n    }\n  }\n  /**\n   * @internal\n   */\n  private _pushUp(pos: number) {\n    const item = this._priorityQueue[pos];\n    while (pos > 0) {\n      const parent = (pos - 1) >> 1;\n      const parentItem = this._priorityQueue[parent];\n      if (this._cmp(parentItem, item) <= 0) break;\n      this._priorityQueue[pos] = parentItem;\n      pos = parent;\n    }\n    this._priorityQueue[pos] = item;\n  }\n  /**\n   * @internal\n   */\n  private _pushDown(pos: number, halfLength: number) {\n    const item = this._priorityQueue[pos];\n    while (pos < halfLength) {\n      let left = pos << 1 | 1;\n      const right = left + 1;\n      let minItem = this._priorityQueue[left];\n      if (\n        right < this._length &&\n        this._cmp(minItem, this._priorityQueue[right]) > 0\n      ) {\n        left = right;\n        minItem = this._priorityQueue[right];\n      }\n      if (this._cmp(minItem, item) >= 0) break;\n      this._priorityQueue[pos] = minItem;\n      pos = left;\n    }\n    this._priorityQueue[pos] = item;\n  }\n  clear() {\n    this._length = 0;\n    this._priorityQueue.length = 0;\n  }\n  /**\n   * @description Push element into a container in order.\n   * @param item - The element you want to push.\n   * @returns The size of heap after pushing.\n   * @example\n   * queue.push(1);\n   */\n  push(item: T) {\n    this._priorityQueue.push(item);\n    this._pushUp(this._length);\n    this._length += 1;\n  }\n  /**\n   * @description Removes the top element.\n   * @returns The element you popped.\n   * @example\n   * queue.pop();\n   */\n  pop() {\n    if (this._length === 0) return;\n    const value = this._priorityQueue[0];\n    const last = this._priorityQueue.pop()!;\n    this._length -= 1;\n    if (this._length) {\n      this._priorityQueue[0] = last;\n      this._pushDown(0, this._length >> 1);\n    }\n    return value;\n  }\n  /**\n   * @description Accesses the top element.\n   * @example\n   * const top = queue.top();\n   */\n  top(): T | undefined {\n    return this._priorityQueue[0];\n  }\n  /**\n   * @description Check if element is in heap.\n   * @param item - The item want to find.\n   * @returns Whether element is in heap.\n   * @example\n   * const que = new PriorityQueue([], (x, y) => x.id - y.id);\n   * const obj = { id: 1 };\n   * que.push(obj);\n   * console.log(que.find(obj));  // true\n   */\n  find(item: T) {\n    return this._priorityQueue.indexOf(item) >= 0;\n  }\n  /**\n   * @description Remove specified item from heap.\n   * @param item - The item want to remove.\n   * @returns Whether remove success.\n   * @example\n   * const que = new PriorityQueue([], (x, y) => x.id - y.id);\n   * const obj = { id: 1 };\n   * que.push(obj);\n   * que.remove(obj);\n   */\n  remove(item: T) {\n    const index = this._priorityQueue.indexOf(item);\n    if (index < 0) return false;\n    if (index === 0) {\n      this.pop();\n    } else if (index === this._length - 1) {\n      this._priorityQueue.pop();\n      this._length -= 1;\n    } else {\n      this._priorityQueue.splice(index, 1, this._priorityQueue.pop()!);\n      this._length -= 1;\n      this._pushUp(index);\n      this._pushDown(index, this._length >> 1);\n    }\n    return true;\n  }\n  /**\n   * @description Update item and it's pos in the heap.\n   * @param item - The item want to update.\n   * @returns Whether update success.\n   * @example\n   * const que = new PriorityQueue([], (x, y) => x.id - y.id);\n   * const obj = { id: 1 };\n   * que.push(obj);\n   * obj.id = 2;\n   * que.updateItem(obj);\n   */\n  updateItem(item: T) {\n    const index = this._priorityQueue.indexOf(item);\n    if (index < 0) return false;\n    this._pushUp(index);\n    this._pushDown(index, this._length >> 1);\n    return true;\n  }\n  /**\n   * @returns Return a copy array of heap.\n   * @example\n   * const arr = queue.toArray();\n   */\n  toArray() {\n    return [...this._priorityQueue];\n  }\n}\n\nexport default PriorityQueue;\n"]},"metadata":{},"sourceType":"module"}