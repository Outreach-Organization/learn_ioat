{"ast":null,"code":"var _jsxFileName = \"/home/nza/PlantQ/src/App.js\";\nimport React from 'react';\nimport { Card, Button, Form, Input, Row, Col, Select } from 'antd';\nimport { useState } from 'react';\nimport mqtt from 'mqtt';\nconst {\n  Option\n} = Select;\n\nconst App = () => {\n  const [connected, setConnected] = useState(false);\n  const [form] = Form.useForm();\n\n  const handleConnect = () => {\n    form.validateFields().then(values => {\n      const {\n        protocol,\n        host,\n        clientId,\n        port,\n        username,\n        password\n      } = values;\n      const url = `${protocol}://${host}:${port}/mqtt`;\n      const options = {\n        clientId,\n        username,\n        password\n      };\n      const client = mqtt.connect(url, options);\n      client.on('connect', () => {\n        setConnected(true);\n      });\n      client.on('close', () => {\n        setConnected(false);\n      });\n    });\n  };\n\n  const handleDisconnect = () => {\n    // Logic to handle disconnection\n    console.log('Disconnecting...');\n    setConnected(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    title: \"Connection\",\n    actions: [/*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      onClick: handleConnect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }, \"Connect\"), /*#__PURE__*/React.createElement(Button, {\n      danger: true,\n      onClick: handleDisconnect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }, \"Disconnect\")],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    layout: \"vertical\",\n    name: \"basic\",\n    form: form,\n    initialValues: {\n      protocol: 'ws',\n      host: 'localhost',\n      port: 8080,\n      clientId: 'emqx_react_' + Math.random().toString(16).substring(2, 8),\n      username: '',\n      password: ''\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Protocol\",\n    name: \"protocol\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Option, {\n    value: \"ws\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 19\n    }\n  }, \"ws\"), /*#__PURE__*/React.createElement(Option, {\n    value: \"wss\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 19\n    }\n  }, \"wss\")))), /*#__PURE__*/React.createElement(Col, {\n    span: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Host\",\n    name: \"host\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    span: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Port\",\n    name: \"port\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    span: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Client ID\",\n    name: \"clientId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    span: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Username\",\n    name: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    span: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Password\",\n    name: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Input.Password, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  })))))), /*#__PURE__*/React.createElement(Card, {\n    title: \"Connection Status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, \"Connected: \", connected ? 'Yes' : 'No')));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/nza/PlantQ/src/App.js"],"names":["React","Card","Button","Form","Input","Row","Col","Select","useState","mqtt","Option","App","connected","setConnected","form","useForm","handleConnect","validateFields","then","values","protocol","host","clientId","port","username","password","url","options","client","connect","on","handleDisconnect","console","log","Math","random","toString","substring"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Card, Button, Form, Input, Row, Col, Select } from 'antd';\nimport { useState } from 'react';\nimport mqtt from 'mqtt';\n\nconst { Option } = Select;\n\nconst App = () => {\n  const [connected, setConnected] = useState(false);\n  const [form] = Form.useForm();\n\n  const handleConnect = () => {\n    form.validateFields().then((values) => {\n      const { protocol, host, clientId, port, username, password } = values;\n      const url = `${protocol}://${host}:${port}/mqtt`;\n      const options = {\n        clientId,\n        username,\n        password,\n      };\n\n      const client = mqtt.connect(url, options);\n\n      client.on('connect', () => {\n        setConnected(true);\n      });\n\n      client.on('close', () => {\n        setConnected(false);\n      });\n    });\n  };\n\n  const handleDisconnect = () => {\n    // Logic to handle disconnection\n    console.log('Disconnecting...');\n    setConnected(false);\n  };\n\n  return (\n    <div>\n      <Card\n        title=\"Connection\"\n        actions={[\n          <Button type=\"primary\" onClick={handleConnect}>\n            Connect\n          </Button>,\n          <Button danger onClick={handleDisconnect}>\n            Disconnect\n          </Button>,\n        ]}\n      >\n        <Form\n          layout=\"vertical\"\n          name=\"basic\"\n          form={form}\n          initialValues={{\n            protocol: 'ws',\n            host: 'localhost',\n            port: 8080,\n            clientId: 'emqx_react_' + Math.random().toString(16).substring(2, 8),\n            username: '',\n            password: '',\n          }}\n        >\n          <Row gutter={20}>\n            <Col span={8}>\n              <Form.Item label=\"Protocol\" name=\"protocol\">\n                <Select>\n                  <Option value=\"ws\">ws</Option>\n                  <Option value=\"wss\">wss</Option>\n                </Select>\n              </Form.Item>\n            </Col>\n            <Col span={8}>\n              <Form.Item label=\"Host\" name=\"host\">\n                <Input />\n              </Form.Item>\n            </Col>\n            <Col span={8}>\n              <Form.Item label=\"Port\" name=\"port\">\n                <Input />\n              </Form.Item>\n            </Col>\n            <Col span={8}>\n              <Form.Item label=\"Client ID\" name=\"clientId\">\n                <Input />\n              </Form.Item>\n            </Col>\n            <Col span={8}>\n              <Form.Item label=\"Username\" name=\"username\">\n                <Input />\n              </Form.Item>\n            </Col>\n            <Col span={8}>\n              <Form.Item label=\"Password\" name=\"password\">\n                <Input.Password />\n              </Form.Item>\n            </Col>\n          </Row>\n        </Form>\n      </Card>\n\n      <Card title=\"Connection Status\">\n        <p>Connected: {connected ? 'Yes' : 'No'}</p>\n      </Card>\n    </div>\n  );\n};\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}