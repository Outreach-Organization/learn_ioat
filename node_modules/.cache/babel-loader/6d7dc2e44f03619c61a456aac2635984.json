{"ast":null,"code":"var _jsxFileName = \"/home/nza/PlantQ/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Card, Button } from 'antd';\nimport mqtt from 'mqtt';\n\nconst Connection = ({\n  connectBtn\n}) => {\n  const [connected, setConnected] = useState(false);\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    const client = mqtt.connect({\n      protocol: 'ws',\n      hostname: 'localhost',\n      port: 8080\n    });\n    client.on('connect', () => {\n      setConnected(true);\n      client.subscribe('python/mqtt');\n    });\n    client.on('message', (topic, message) => {\n      const newMessage = {\n        topic,\n        message: message.toString()\n      };\n      setMessages(prevMessages => [...prevMessages, newMessage]);\n    });\n    client.on('close', () => {\n      setConnected(false);\n    });\n    return () => {\n      client.end();\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(Card, {\n    title: \"Connection Status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, \"Connected: \", connected ? 'Yes' : 'No'), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"Subscribed Messages:\"), messages.map((message, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, \"Topic: \", message.topic), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, \"Message: \", message.message)))));\n};\n\nexport default Connection;","map":{"version":3,"sources":["/home/nza/PlantQ/src/App.js"],"names":["React","useState","useEffect","Card","Button","mqtt","Connection","connectBtn","connected","setConnected","messages","setMessages","client","connect","protocol","hostname","port","on","subscribe","topic","message","newMessage","toString","prevMessages","end","map","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,MAA7B;AACA,OAAOC,IAAP,MAAiB,MAAjB;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AACrC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,MAAM,GAAGP,IAAI,CAACQ,OAAL,CAAa;AAC1BC,MAAAA,QAAQ,EAAE,IADgB;AAE1BC,MAAAA,QAAQ,EAAE,WAFgB;AAG1BC,MAAAA,IAAI,EAAE;AAHoB,KAAb,CAAf;AAMAJ,IAAAA,MAAM,CAACK,EAAP,CAAU,SAAV,EAAqB,MAAM;AACzBR,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACAG,MAAAA,MAAM,CAACM,SAAP,CAAiB,aAAjB;AACD,KAHD;AAKAN,IAAAA,MAAM,CAACK,EAAP,CAAU,SAAV,EAAqB,CAACE,KAAD,EAAQC,OAAR,KAAoB;AACvC,YAAMC,UAAU,GAAG;AACjBF,QAAAA,KADiB;AAEjBC,QAAAA,OAAO,EAAEA,OAAO,CAACE,QAAR;AAFQ,OAAnB;AAIAX,MAAAA,WAAW,CAAEY,YAAD,IAAkB,CAAC,GAAGA,YAAJ,EAAkBF,UAAlB,CAAnB,CAAX;AACD,KAND;AAQAT,IAAAA,MAAM,CAACK,EAAP,CAAU,OAAV,EAAmB,MAAM;AACvBR,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAFD;AAIA,WAAO,MAAM;AACXG,MAAAA,MAAM,CAACY,GAAP;AACD,KAFD;AAGD,GA3BQ,EA2BN,EA3BM,CAAT;AA6BA,sBACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAC,mBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAehB,SAAS,GAAG,KAAH,GAAW,IAAnC,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEGE,QAAQ,CAACe,GAAT,CAAa,CAACL,OAAD,EAAUM,KAAV,kBACZ;AAAK,IAAA,GAAG,EAAEA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAWN,OAAO,CAACD,KAAnB,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAaC,OAAO,CAACA,OAArB,CAFF,CADD,CAFH,CAFF,CADF;AAcD,CA/CD;;AAiDA,eAAed,UAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Card, Button } from 'antd';\nimport mqtt from 'mqtt';\n\nconst Connection = ({ connectBtn }) => {\n  const [connected, setConnected] = useState(false);\n  const [messages, setMessages] = useState([]);\n\n  useEffect(() => {\n    const client = mqtt.connect({\n      protocol: 'ws',\n      hostname: 'localhost',\n      port: 8080,\n    });\n\n    client.on('connect', () => {\n      setConnected(true);\n      client.subscribe('python/mqtt');\n    });\n\n    client.on('message', (topic, message) => {\n      const newMessage = {\n        topic,\n        message: message.toString(),\n      };\n      setMessages((prevMessages) => [...prevMessages, newMessage]);\n    });\n\n    client.on('close', () => {\n      setConnected(false);\n    });\n\n    return () => {\n      client.end();\n    };\n  }, []);\n\n  return (\n    <Card title=\"Connection Status\">\n      <p>Connected: {connected ? 'Yes' : 'No'}</p>\n      <div>\n        <h4>Subscribed Messages:</h4>\n        {messages.map((message, index) => (\n          <div key={index}>\n            <p>Topic: {message.topic}</p>\n            <p>Message: {message.message}</p>\n          </div>\n        ))}\n      </div>\n    </Card>\n  );\n};\n\nexport default Connection;\n\n"]},"metadata":{},"sourceType":"module"}