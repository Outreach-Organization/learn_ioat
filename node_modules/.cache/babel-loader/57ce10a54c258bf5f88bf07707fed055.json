{"ast":null,"code":"var __extends = this && this.t || function () {\n  var extendStatics = function (t, r) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (t, r) {\n      t.__proto__ = r;\n    } || function (t, r) {\n      for (var e in r) if (Object.prototype.hasOwnProperty.call(r, e)) t[e] = r[e];\n    };\n\n    return extendStatics(t, r);\n  };\n\n  return function (t, r) {\n    if (typeof r !== \"function\" && r !== null) throw new TypeError(\"Class extends value \" + String(r) + \" is not a constructor or null\");\n    extendStatics(t, r);\n\n    function __() {\n      this.constructor = t;\n    }\n\n    t.prototype = r === null ? Object.create(r) : (__.prototype = r.prototype, new __());\n  };\n}();\n\nvar __generator = this && this.i || function (t, r) {\n  var e = {\n    label: 0,\n    sent: function () {\n      if (s[0] & 1) throw s[1];\n      return s[1];\n    },\n    trys: [],\n    ops: []\n  },\n      n,\n      i,\n      s,\n      a;\n  return a = {\n    next: verb(0),\n    throw: verb(1),\n    return: verb(2)\n  }, typeof Symbol === \"function\" && (a[Symbol.iterator] = function () {\n    return this;\n  }), a;\n\n  function verb(t) {\n    return function (r) {\n      return step([t, r]);\n    };\n  }\n\n  function step(a) {\n    if (n) throw new TypeError(\"Generator is already executing.\");\n\n    while (e) try {\n      if (n = 1, i && (s = a[0] & 2 ? i[\"return\"] : a[0] ? i[\"throw\"] || ((s = i[\"return\"]) && s.call(i), 0) : i.next) && !(s = s.call(i, a[1])).done) return s;\n      if (i = 0, s) a = [a[0] & 2, s.value];\n\n      switch (a[0]) {\n        case 0:\n        case 1:\n          s = a;\n          break;\n\n        case 4:\n          e.label++;\n          return {\n            value: a[1],\n            done: false\n          };\n\n        case 5:\n          e.label++;\n          i = a[1];\n          a = [0];\n          continue;\n\n        case 7:\n          a = e.ops.pop();\n          e.trys.pop();\n          continue;\n\n        default:\n          if (!(s = e.trys, s = s.length > 0 && s[s.length - 1]) && (a[0] === 6 || a[0] === 2)) {\n            e = 0;\n            continue;\n          }\n\n          if (a[0] === 3 && (!s || a[1] > s[0] && a[1] < s[3])) {\n            e.label = a[1];\n            break;\n          }\n\n          if (a[0] === 6 && e.label < s[1]) {\n            e.label = s[1];\n            s = a;\n            break;\n          }\n\n          if (s && e.label < s[2]) {\n            e.label = s[2];\n            e.ops.push(a);\n            break;\n          }\n\n          if (s[2]) e.ops.pop();\n          e.trys.pop();\n          continue;\n      }\n\n      a = r.call(t, e);\n    } catch (t) {\n      a = [6, t];\n      i = 0;\n    } finally {\n      n = s = 0;\n    }\n\n    if (a[0] & 5) throw a[1];\n    return {\n      value: a[0] ? a[1] : void 0,\n      done: true\n    };\n  }\n};\n\nimport { HashContainer, HashContainerIterator } from \"./Base\";\nimport { throwIteratorAccessError } from \"../../utils/throwError\";\n\nvar HashSetIterator = function (t) {\n  __extends(HashSetIterator, t);\n\n  function HashSetIterator(r, e, n, i) {\n    var s = t.call(this, r, e, i) || this;\n    s.container = n;\n    return s;\n  }\n\n  Object.defineProperty(HashSetIterator.prototype, \"pointer\", {\n    get: function () {\n      if (this.o === this.h) {\n        throwIteratorAccessError();\n      }\n\n      return this.o.u;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  HashSetIterator.prototype.copy = function () {\n    return new HashSetIterator(this.o, this.h, this.container, this.iteratorType);\n  };\n\n  return HashSetIterator;\n}(HashContainerIterator);\n\nvar HashSet = function (t) {\n  __extends(HashSet, t);\n\n  function HashSet(r) {\n    if (r === void 0) {\n      r = [];\n    }\n\n    var e = t.call(this) || this;\n    var n = e;\n    r.forEach(function (t) {\n      n.insert(t);\n    });\n    return e;\n  }\n\n  HashSet.prototype.begin = function () {\n    return new HashSetIterator(this.H, this.h, this);\n  };\n\n  HashSet.prototype.end = function () {\n    return new HashSetIterator(this.h, this.h, this);\n  };\n\n  HashSet.prototype.rBegin = function () {\n    return new HashSetIterator(this.l, this.h, this, 1);\n  };\n\n  HashSet.prototype.rEnd = function () {\n    return new HashSetIterator(this.h, this.h, this, 1);\n  };\n\n  HashSet.prototype.front = function () {\n    return this.H.u;\n  };\n\n  HashSet.prototype.back = function () {\n    return this.l.u;\n  };\n\n  HashSet.prototype.insert = function (t, r) {\n    return this.v(t, undefined, r);\n  };\n\n  HashSet.prototype.getElementByPos = function (t) {\n    if (t < 0 || t > this.M - 1) {\n      throw new RangeError();\n    }\n\n    var r = this.H;\n\n    while (t--) {\n      r = r.m;\n    }\n\n    return r.u;\n  };\n\n  HashSet.prototype.find = function (t, r) {\n    var e = this.g(t, r);\n    return new HashSetIterator(e, this.h, this);\n  };\n\n  HashSet.prototype.forEach = function (t) {\n    var r = 0;\n    var e = this.H;\n\n    while (e !== this.h) {\n      t(e.u, r++, this);\n      e = e.m;\n    }\n  };\n\n  HashSet.prototype[Symbol.iterator] = function () {\n    return function () {\n      var t;\n      return __generator(this, function (r) {\n        switch (r.label) {\n          case 0:\n            t = this.H;\n            r.label = 1;\n\n          case 1:\n            if (!(t !== this.h)) return [3, 3];\n            return [4, t.u];\n\n          case 2:\n            r.sent();\n            t = t.m;\n            return [3, 1];\n\n          case 3:\n            return [2];\n        }\n      });\n    }.bind(this)();\n  };\n\n  return HashSet;\n}(HashContainer);\n\nexport default HashSet;","map":{"version":3,"sources":["container/HashContainer/HashSet.js","../../src/container/HashContainer/HashSet.ts"],"names":["__extends","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","__generator","thisArg","body","_","label","sent","t","trys","ops","f","y","g","next","verb","throw","return","Symbol","iterator","n","v","step","op","done","value","pop","length","push","e","_this","get","enumerable","configurable","node","_a","HashContainer","HashContainerIterator","throwIteratorAccessError","RangeError","header","container","iteratorType","_super","HashSetIterator","_node","_header","_key","self","forEach","el","insert","HashSet","_head","_tail","key","isObject","_set","undefined","pos","_length","_next","_findElementNode","callback","index","bind"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { HashContainer, HashContainerIterator } from \"./Base\";\nimport $checkWithinAccessParams from \"../../utils/checkParams.macro\";\nimport { throwIteratorAccessError } from \"../../utils/throwError\";\nvar HashSetIterator = /** @class */ (function (_super) {\n    __extends(HashSetIterator, _super);\n    function HashSetIterator(node, header, container, iteratorType) {\n        var _this = _super.call(this, node, header, iteratorType) || this;\n        _this.container = container;\n        return _this;\n    }\n    Object.defineProperty(HashSetIterator.prototype, \"pointer\", {\n        get: function () {\n            if (this._node === this._header) {\n                throwIteratorAccessError();\n            }\n            return this._node._key;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    HashSetIterator.prototype.copy = function () {\n        return new HashSetIterator(this._node, this._header, this.container, this.iteratorType);\n    };\n    return HashSetIterator;\n}(HashContainerIterator));\nvar HashSet = /** @class */ (function (_super) {\n    __extends(HashSet, _super);\n    function HashSet(container) {\n        if (container === void 0) { container = []; }\n        var _this = _super.call(this) || this;\n        var self = _this;\n        container.forEach(function (el) {\n            self.insert(el);\n        });\n        return _this;\n    }\n    HashSet.prototype.begin = function () {\n        return new HashSetIterator(this._head, this._header, this);\n    };\n    HashSet.prototype.end = function () {\n        return new HashSetIterator(this._header, this._header, this);\n    };\n    HashSet.prototype.rBegin = function () {\n        return new HashSetIterator(this._tail, this._header, this, 1 /* IteratorType.REVERSE */);\n    };\n    HashSet.prototype.rEnd = function () {\n        return new HashSetIterator(this._header, this._header, this, 1 /* IteratorType.REVERSE */);\n    };\n    HashSet.prototype.front = function () {\n        return this._head._key;\n    };\n    HashSet.prototype.back = function () {\n        return this._tail._key;\n    };\n    /**\n     * @description Insert element to set.\n     * @param key - The key want to insert.\n     * @param isObject - Tell us if the type of inserted key is `object` to improve efficiency.<br/>\n     *                   If a `undefined` value is passed in, the type will be automatically judged.\n     * @returns The size of container after inserting.\n     */\n    HashSet.prototype.insert = function (key, isObject) {\n        return this._set(key, undefined, isObject);\n    };\n    HashSet.prototype.getElementByPos = function (pos) {\n        if (pos < 0 || pos > this._length - 1) {\n            throw new RangeError();\n        }\n        var node = this._head;\n        while (pos--) {\n            node = node._next;\n        }\n        return node._key;\n    };\n    /**\n     * @description Check key if exist in container.\n     * @param key - The element you want to search.\n     * @param isObject - Tell us if the type of inserted key is `object` to improve efficiency.<br/>\n     *                   If a `undefined` value is passed in, the type will be automatically judged.\n     * @returns An iterator pointing to the element if found, or super end if not found.\n     */\n    HashSet.prototype.find = function (key, isObject) {\n        var node = this._findElementNode(key, isObject);\n        return new HashSetIterator(node, this._header, this);\n    };\n    HashSet.prototype.forEach = function (callback) {\n        var index = 0;\n        var node = this._head;\n        while (node !== this._header) {\n            callback(node._key, index++, this);\n            node = node._next;\n        }\n    };\n    HashSet.prototype[Symbol.iterator] = function () {\n        return function () {\n            var node;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        node = this._head;\n                        _a.label = 1;\n                    case 1:\n                        if (!(node !== this._header)) return [3 /*break*/, 3];\n                        return [4 /*yield*/, node._key];\n                    case 2:\n                        _a.sent();\n                        node = node._next;\n                        return [3 /*break*/, 1];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        }.bind(this)();\n    };\n    return HashSet;\n}(HashContainer));\nexport default HashSet;\n","import { initContainer, IteratorType } from '@/container/ContainerBase';\nimport { HashContainer, HashContainerIterator, HashLinkNode } from '@/container/HashContainer/Base';\nimport $checkWithinAccessParams from '@/utils/checkParams.macro';\nimport { throwIteratorAccessError } from '@/utils/throwError';\n\nclass HashSetIterator<K> extends HashContainerIterator<K, undefined> {\n  readonly container: HashSet<K>;\n  constructor(\n    node: HashLinkNode<K, undefined>,\n    header: HashLinkNode<K, undefined>,\n    container: HashSet<K>,\n    iteratorType?: IteratorType\n  ) {\n    super(node, header, iteratorType);\n    this.container = container;\n  }\n  get pointer() {\n    if (this._node === this._header) {\n      throwIteratorAccessError();\n    }\n    return this._node._key;\n  }\n  copy() {\n    return new HashSetIterator<K>(this._node, this._header, this.container, this.iteratorType);\n  }\n  // @ts-ignore\n  equals(iter: HashSetIterator<K>): boolean;\n}\n\nexport type { HashSetIterator };\n\nclass HashSet<K> extends HashContainer<K, undefined> {\n  constructor(container: initContainer<K> = []) {\n    super();\n    const self = this;\n    container.forEach(function (el) {\n      self.insert(el);\n    });\n  }\n  begin() {\n    return new HashSetIterator<K>(this._head, this._header, this);\n  }\n  end() {\n    return new HashSetIterator<K>(this._header, this._header, this);\n  }\n  rBegin() {\n    return new HashSetIterator<K>(this._tail, this._header, this, IteratorType.REVERSE);\n  }\n  rEnd() {\n    return new HashSetIterator<K>(this._header, this._header, this, IteratorType.REVERSE);\n  }\n  front(): K | undefined {\n    return this._head._key;\n  }\n  back(): K | undefined {\n    return this._tail._key;\n  }\n  /**\n   * @description Insert element to set.\n   * @param key - The key want to insert.\n   * @param isObject - Tell us if the type of inserted key is `object` to improve efficiency.<br/>\n   *                   If a `undefined` value is passed in, the type will be automatically judged.\n   * @returns The size of container after inserting.\n   */\n  insert(key: K, isObject?: boolean) {\n    return this._set(key, undefined, isObject);\n  }\n  getElementByPos(pos: number) {\n    $checkWithinAccessParams!(pos, 0, this._length - 1);\n    let node = this._head;\n    while (pos--) {\n      node = node._next;\n    }\n    return node._key;\n  }\n  /**\n   * @description Check key if exist in container.\n   * @param key - The element you want to search.\n   * @param isObject - Tell us if the type of inserted key is `object` to improve efficiency.<br/>\n   *                   If a `undefined` value is passed in, the type will be automatically judged.\n   * @returns An iterator pointing to the element if found, or super end if not found.\n   */\n  find(key: K, isObject?: boolean) {\n    const node = this._findElementNode(key, isObject);\n    return new HashSetIterator<K>(node, this._header, this);\n  }\n  forEach(callback: (element: K, index: number, container: HashSet<K>) => void) {\n    let index = 0;\n    let node = this._head;\n    while (node !== this._header) {\n      callback(node._key, index++, this);\n      node = node._next;\n    }\n  }\n  [Symbol.iterator]() {\n    return function * (this: HashSet<K>) {\n      let node = this._head;\n      while (node !== this._header) {\n        yield node._key;\n        node = node._next;\n      }\n    }.bind(this)();\n  }\n}\n\nexport default HashSet;\n"]},"metadata":{},"sourceType":"module"}