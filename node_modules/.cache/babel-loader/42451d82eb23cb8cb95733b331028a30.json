{"ast":null,"code":"var __extends = this && this.t || function () {\n  var extendStatics = function (e, t) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (e, t) {\n      e.__proto__ = t;\n    } || function (e, t) {\n      for (var r in t) if (Object.prototype.hasOwnProperty.call(t, r)) e[r] = t[r];\n    };\n\n    return extendStatics(e, t);\n  };\n\n  return function (e, t) {\n    if (typeof t !== \"function\" && t !== null) throw new TypeError(\"Class extends value \" + String(t) + \" is not a constructor or null\");\n    extendStatics(e, t);\n\n    function __() {\n      this.constructor = e;\n    }\n\n    e.prototype = t === null ? Object.create(t) : (__.prototype = t.prototype, new __());\n  };\n}();\n\nvar __generator = this && this.i || function (e, t) {\n  var r = {\n    label: 0,\n    sent: function () {\n      if (o[0] & 1) throw o[1];\n      return o[1];\n    },\n    trys: [],\n    ops: []\n  },\n      n,\n      i,\n      o,\n      u;\n  return u = {\n    next: verb(0),\n    throw: verb(1),\n    return: verb(2)\n  }, typeof Symbol === \"function\" && (u[Symbol.iterator] = function () {\n    return this;\n  }), u;\n\n  function verb(e) {\n    return function (t) {\n      return step([e, t]);\n    };\n  }\n\n  function step(u) {\n    if (n) throw new TypeError(\"Generator is already executing.\");\n\n    while (r) try {\n      if (n = 1, i && (o = u[0] & 2 ? i[\"return\"] : u[0] ? i[\"throw\"] || ((o = i[\"return\"]) && o.call(i), 0) : i.next) && !(o = o.call(i, u[1])).done) return o;\n      if (i = 0, o) u = [u[0] & 2, o.value];\n\n      switch (u[0]) {\n        case 0:\n        case 1:\n          o = u;\n          break;\n\n        case 4:\n          r.label++;\n          return {\n            value: u[1],\n            done: false\n          };\n\n        case 5:\n          r.label++;\n          i = u[1];\n          u = [0];\n          continue;\n\n        case 7:\n          u = r.ops.pop();\n          r.trys.pop();\n          continue;\n\n        default:\n          if (!(o = r.trys, o = o.length > 0 && o[o.length - 1]) && (u[0] === 6 || u[0] === 2)) {\n            r = 0;\n            continue;\n          }\n\n          if (u[0] === 3 && (!o || u[1] > o[0] && u[1] < o[3])) {\n            r.label = u[1];\n            break;\n          }\n\n          if (u[0] === 6 && r.label < o[1]) {\n            r.label = o[1];\n            o = u;\n            break;\n          }\n\n          if (o && r.label < o[2]) {\n            r.label = o[2];\n            r.ops.push(u);\n            break;\n          }\n\n          if (o[2]) r.ops.pop();\n          r.trys.pop();\n          continue;\n      }\n\n      u = t.call(e, r);\n    } catch (e) {\n      u = [6, e];\n      i = 0;\n    } finally {\n      n = o = 0;\n    }\n\n    if (u[0] & 5) throw u[1];\n    return {\n      value: u[0] ? u[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __values = this && this.V || function (e) {\n  var t = typeof Symbol === \"function\" && Symbol.iterator,\n      r = t && e[t],\n      n = 0;\n  if (r) return r.call(e);\n  if (e && typeof e.length === \"number\") return {\n    next: function () {\n      if (e && n >= e.length) e = void 0;\n      return {\n        value: e && e[n++],\n        done: !e\n      };\n    }\n  };\n  throw new TypeError(t ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nimport TreeContainer from \"./Base\";\nimport TreeIterator from \"./Base/TreeIterator\";\nimport { throwIteratorAccessError } from \"../../utils/throwError\";\n\nvar OrderedSetIterator = function (e) {\n  __extends(OrderedSetIterator, e);\n\n  function OrderedSetIterator(t, r, n, i) {\n    var o = e.call(this, t, r, i) || this;\n    o.container = n;\n    return o;\n  }\n\n  Object.defineProperty(OrderedSetIterator.prototype, \"pointer\", {\n    get: function () {\n      if (this.o === this.h) {\n        throwIteratorAccessError();\n      }\n\n      return this.o.u;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  OrderedSetIterator.prototype.copy = function () {\n    return new OrderedSetIterator(this.o, this.h, this.container, this.iteratorType);\n  };\n\n  return OrderedSetIterator;\n}(TreeIterator);\n\nvar OrderedSet = function (e) {\n  __extends(OrderedSet, e);\n\n  function OrderedSet(t, r, n) {\n    if (t === void 0) {\n      t = [];\n    }\n\n    var i = e.call(this, r, n) || this;\n    var o = i;\n    t.forEach(function (e) {\n      o.insert(e);\n    });\n    return i;\n  }\n\n  OrderedSet.prototype.P = function (e) {\n    return __generator(this, function (t) {\n      switch (t.label) {\n        case 0:\n          if (e === undefined) return [2];\n          return [5, __values(this.P(e.K))];\n\n        case 1:\n          t.sent();\n          return [4, e.u];\n\n        case 2:\n          t.sent();\n          return [5, __values(this.P(e.N))];\n\n        case 3:\n          t.sent();\n          return [2];\n      }\n    });\n  };\n\n  OrderedSet.prototype.begin = function () {\n    return new OrderedSetIterator(this.h.K || this.h, this.h, this);\n  };\n\n  OrderedSet.prototype.end = function () {\n    return new OrderedSetIterator(this.h, this.h, this);\n  };\n\n  OrderedSet.prototype.rBegin = function () {\n    return new OrderedSetIterator(this.h.N || this.h, this.h, this, 1);\n  };\n\n  OrderedSet.prototype.rEnd = function () {\n    return new OrderedSetIterator(this.h, this.h, this, 1);\n  };\n\n  OrderedSet.prototype.front = function () {\n    return this.h.K ? this.h.K.u : undefined;\n  };\n\n  OrderedSet.prototype.back = function () {\n    return this.h.N ? this.h.N.u : undefined;\n  };\n\n  OrderedSet.prototype.insert = function (e, t) {\n    return this.v(e, undefined, t);\n  };\n\n  OrderedSet.prototype.find = function (e) {\n    var t = this.g(this.W, e);\n    return new OrderedSetIterator(t, this.h, this);\n  };\n\n  OrderedSet.prototype.lowerBound = function (e) {\n    var t = this.U(this.W, e);\n    return new OrderedSetIterator(t, this.h, this);\n  };\n\n  OrderedSet.prototype.upperBound = function (e) {\n    var t = this.X(this.W, e);\n    return new OrderedSetIterator(t, this.h, this);\n  };\n\n  OrderedSet.prototype.reverseLowerBound = function (e) {\n    var t = this.Y(this.W, e);\n    return new OrderedSetIterator(t, this.h, this);\n  };\n\n  OrderedSet.prototype.reverseUpperBound = function (e) {\n    var t = this.Z(this.W, e);\n    return new OrderedSetIterator(t, this.h, this);\n  };\n\n  OrderedSet.prototype.union = function (e) {\n    var t = this;\n    e.forEach(function (e) {\n      t.insert(e);\n    });\n    return this.M;\n  };\n\n  OrderedSet.prototype[Symbol.iterator] = function () {\n    return this.P(this.W);\n  };\n\n  return OrderedSet;\n}(TreeContainer);\n\nexport default OrderedSet;","map":{"version":3,"sources":["container/TreeContainer/OrderedSet.js","../../src/container/TreeContainer/OrderedSet.ts"],"names":["__extends","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","__generator","thisArg","body","_","label","sent","t","trys","ops","f","y","g","next","verb","throw","return","Symbol","iterator","n","v","step","op","done","value","pop","length","push","e","__values","o","s","m","i","_this","get","enumerable","configurable","_a","TreeContainer","TreeIterator","throwIteratorAccessError","node","header","container","iteratorType","_super","OrderedSetIterator","_node","_header","_key","cmp","enableIndex","self","forEach","el","insert","OrderedSet","curNode","undefined","_iterationFunc","_left","_right","key","hint","_set","element","resNode","_findElementNode","_root","_lowerBound","_upperBound","_reverseLowerBound","_reverseUpperBound","other","_length"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nimport TreeContainer from './Base';\nimport TreeIterator from './Base/TreeIterator';\nimport { throwIteratorAccessError } from \"../../utils/throwError\";\nvar OrderedSetIterator = /** @class */ (function (_super) {\n    __extends(OrderedSetIterator, _super);\n    function OrderedSetIterator(node, header, container, iteratorType) {\n        var _this = _super.call(this, node, header, iteratorType) || this;\n        _this.container = container;\n        return _this;\n    }\n    Object.defineProperty(OrderedSetIterator.prototype, \"pointer\", {\n        get: function () {\n            if (this._node === this._header) {\n                throwIteratorAccessError();\n            }\n            return this._node._key;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    OrderedSetIterator.prototype.copy = function () {\n        return new OrderedSetIterator(this._node, this._header, this.container, this.iteratorType);\n    };\n    return OrderedSetIterator;\n}(TreeIterator));\nvar OrderedSet = /** @class */ (function (_super) {\n    __extends(OrderedSet, _super);\n    /**\n     * @param container - The initialization container.\n     * @param cmp - The compare function.\n     * @param enableIndex - Whether to enable iterator indexing function.\n     * @example\n     * new OrderedSet();\n     * new OrderedSet([0, 1, 2]);\n     * new OrderedSet([0, 1, 2], (x, y) => x - y);\n     * new OrderedSet([0, 1, 2], (x, y) => x - y, true);\n     */\n    function OrderedSet(container, cmp, enableIndex) {\n        if (container === void 0) { container = []; }\n        var _this = _super.call(this, cmp, enableIndex) || this;\n        var self = _this;\n        container.forEach(function (el) {\n            self.insert(el);\n        });\n        return _this;\n    }\n    /**\n     * @internal\n     */\n    OrderedSet.prototype._iterationFunc = function (curNode) {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (curNode === undefined)\n                        return [2 /*return*/];\n                    return [5 /*yield**/, __values(this._iterationFunc(curNode._left))];\n                case 1:\n                    _a.sent();\n                    return [4 /*yield*/, curNode._key];\n                case 2:\n                    _a.sent();\n                    return [5 /*yield**/, __values(this._iterationFunc(curNode._right))];\n                case 3:\n                    _a.sent();\n                    return [2 /*return*/];\n            }\n        });\n    };\n    OrderedSet.prototype.begin = function () {\n        return new OrderedSetIterator(this._header._left || this._header, this._header, this);\n    };\n    OrderedSet.prototype.end = function () {\n        return new OrderedSetIterator(this._header, this._header, this);\n    };\n    OrderedSet.prototype.rBegin = function () {\n        return new OrderedSetIterator(this._header._right || this._header, this._header, this, 1 /* IteratorType.REVERSE */);\n    };\n    OrderedSet.prototype.rEnd = function () {\n        return new OrderedSetIterator(this._header, this._header, this, 1 /* IteratorType.REVERSE */);\n    };\n    OrderedSet.prototype.front = function () {\n        return this._header._left ? this._header._left._key : undefined;\n    };\n    OrderedSet.prototype.back = function () {\n        return this._header._right ? this._header._right._key : undefined;\n    };\n    /**\n     * @description Insert element to set.\n     * @param key - The key want to insert.\n     * @param hint - You can give an iterator hint to improve insertion efficiency.\n     * @return The size of container after setting.\n     * @example\n     * const st = new OrderedSet([2, 4, 5]);\n     * const iter = st.begin();\n     * st.insert(1);\n     * st.insert(3, iter);  // give a hint will be faster.\n     */\n    OrderedSet.prototype.insert = function (key, hint) {\n        return this._set(key, undefined, hint);\n    };\n    OrderedSet.prototype.find = function (element) {\n        var resNode = this._findElementNode(this._root, element);\n        return new OrderedSetIterator(resNode, this._header, this);\n    };\n    OrderedSet.prototype.lowerBound = function (key) {\n        var resNode = this._lowerBound(this._root, key);\n        return new OrderedSetIterator(resNode, this._header, this);\n    };\n    OrderedSet.prototype.upperBound = function (key) {\n        var resNode = this._upperBound(this._root, key);\n        return new OrderedSetIterator(resNode, this._header, this);\n    };\n    OrderedSet.prototype.reverseLowerBound = function (key) {\n        var resNode = this._reverseLowerBound(this._root, key);\n        return new OrderedSetIterator(resNode, this._header, this);\n    };\n    OrderedSet.prototype.reverseUpperBound = function (key) {\n        var resNode = this._reverseUpperBound(this._root, key);\n        return new OrderedSetIterator(resNode, this._header, this);\n    };\n    OrderedSet.prototype.union = function (other) {\n        var self = this;\n        other.forEach(function (el) {\n            self.insert(el);\n        });\n        return this._length;\n    };\n    OrderedSet.prototype[Symbol.iterator] = function () {\n        return this._iterationFunc(this._root);\n    };\n    return OrderedSet;\n}(TreeContainer));\nexport default OrderedSet;\n","import TreeContainer from './Base';\nimport TreeIterator from './Base/TreeIterator';\nimport { TreeNode } from './Base/TreeNode';\nimport { initContainer, IteratorType } from '@/container/ContainerBase';\nimport { throwIteratorAccessError } from '@/utils/throwError';\n\nclass OrderedSetIterator<K> extends TreeIterator<K, undefined> {\n  container: OrderedSet<K>;\n  constructor(\n    node: TreeNode<K, undefined>,\n    header: TreeNode<K, undefined>,\n    container: OrderedSet<K>,\n    iteratorType?: IteratorType\n  ) {\n    super(node, header, iteratorType);\n    this.container = container;\n  }\n  get pointer() {\n    if (this._node === this._header) {\n      throwIteratorAccessError();\n    }\n    return this._node._key!;\n  }\n  copy() {\n    return new OrderedSetIterator<K>(\n      this._node,\n      this._header,\n      this.container,\n      this.iteratorType\n    );\n  }\n  // @ts-ignore\n  equals(iter: OrderedSetIterator<K>): boolean;\n}\n\nexport type { OrderedSetIterator };\n\nclass OrderedSet<K> extends TreeContainer<K, undefined> {\n  /**\n   * @param container - The initialization container.\n   * @param cmp - The compare function.\n   * @param enableIndex - Whether to enable iterator indexing function.\n   * @example\n   * new OrderedSet();\n   * new OrderedSet([0, 1, 2]);\n   * new OrderedSet([0, 1, 2], (x, y) => x - y);\n   * new OrderedSet([0, 1, 2], (x, y) => x - y, true);\n   */\n  constructor(\n    container: initContainer<K> = [],\n    cmp?: (x: K, y: K) => number,\n    enableIndex?: boolean\n  ) {\n    super(cmp, enableIndex);\n    const self = this;\n    container.forEach(function (el) {\n      self.insert(el);\n    });\n  }\n  /**\n   * @internal\n   */\n  private * _iterationFunc(\n    curNode: TreeNode<K, undefined> | undefined\n  ): Generator<K, void> {\n    if (curNode === undefined) return;\n    yield * this._iterationFunc(curNode._left);\n    yield curNode._key!;\n    yield * this._iterationFunc(curNode._right);\n  }\n  begin() {\n    return new OrderedSetIterator<K>(\n      this._header._left || this._header,\n      this._header,\n      this\n    );\n  }\n  end() {\n    return new OrderedSetIterator<K>(this._header, this._header, this);\n  }\n  rBegin() {\n    return new OrderedSetIterator<K>(\n      this._header._right || this._header,\n      this._header,\n      this,\n      IteratorType.REVERSE\n    );\n  }\n  rEnd() {\n    return new OrderedSetIterator<K>(this._header, this._header, this, IteratorType.REVERSE);\n  }\n  front() {\n    return this._header._left ? this._header._left._key : undefined;\n  }\n  back() {\n    return this._header._right ? this._header._right._key : undefined;\n  }\n  /**\n   * @description Insert element to set.\n   * @param key - The key want to insert.\n   * @param hint - You can give an iterator hint to improve insertion efficiency.\n   * @return The size of container after setting.\n   * @example\n   * const st = new OrderedSet([2, 4, 5]);\n   * const iter = st.begin();\n   * st.insert(1);\n   * st.insert(3, iter);  // give a hint will be faster.\n   */\n  insert(key: K, hint?: OrderedSetIterator<K>) {\n    return this._set(key, undefined, hint);\n  }\n  find(element: K) {\n    const resNode = this._findElementNode(this._root, element);\n    return new OrderedSetIterator<K>(resNode, this._header, this);\n  }\n  lowerBound(key: K) {\n    const resNode = this._lowerBound(this._root, key);\n    return new OrderedSetIterator<K>(resNode, this._header, this);\n  }\n  upperBound(key: K) {\n    const resNode = this._upperBound(this._root, key);\n    return new OrderedSetIterator<K>(resNode, this._header, this);\n  }\n  reverseLowerBound(key: K) {\n    const resNode = this._reverseLowerBound(this._root, key);\n    return new OrderedSetIterator<K>(resNode, this._header, this);\n  }\n  reverseUpperBound(key: K) {\n    const resNode = this._reverseUpperBound(this._root, key);\n    return new OrderedSetIterator<K>(resNode, this._header, this);\n  }\n  union(other: OrderedSet<K>) {\n    const self = this;\n    other.forEach(function (el) {\n      self.insert(el);\n    });\n    return this._length;\n  }\n  [Symbol.iterator]() {\n    return this._iterationFunc(this._root);\n  }\n  // @ts-ignore\n  eraseElementByIterator(iter: OrderedSetIterator<K>): OrderedSetIterator<K>;\n  // @ts-ignore\n  forEach(callback: (element: K, index: number, tree: OrderedSet<K>) => void): void;\n  // @ts-ignore\n  getElementByPos(pos: number): K;\n}\n\nexport default OrderedSet;\n"]},"metadata":{},"sourceType":"module"}